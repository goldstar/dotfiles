# shortcut to this dotfiles path is $DOTHOME
export DOTHOME=$HOME/.dotfiles

# source folder that we can `scd [tab]` into
export SOURCE_DIR=$HOME/src

# all of our zsh files
typeset -U config_files
config_files=($DOTHOME/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -Uz compinit
compinit

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

# I want to use [ and ] damn it!
unsetopt nomatch

# set cd autocompletion to commonly visited directories
cdpath=(. ~ ~/src $SOURCE_DIR)

# rust, et al
export PATH="$HOME/.cargo/bin:$PATH"

# chruby!
# osx location
[[ ! -a /usr/local/opt/chruby/share/chruby/chruby.sh ]] || source /usr/local/opt/chruby/share/chruby/chruby.sh
[[ ! -a /usr/local/opt/chruby/share/chruby/auto.sh ]] || source /usr/local/opt/chruby/share/chruby/auto.sh
# ubuntu location
[[ ! -a /usr/local/share/chruby/chruby.sh ]] || source /usr/local/share/chruby/chruby.sh
[[ ! -a /usr/local/share/chruby/auto.sh ]] || source /usr/local/share/chruby/auto.sh

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export NVM_DIR="$HOME/.nvm"
[ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm

# import local zsh customizations, if present
zrcl="$HOME/.zshrc.local"

[[ ! -a $zrcl ]] || source $zrcl

###-tns-completion-start-###
if [ -f /Users/joaquinvolpe/.tnsrc ]; then
    source /Users/joaquinvolpe/.tnsrc
fi
###-tns-completion-end-###

PATH="/Users/joaquinvolpe/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="/Users/joaquinvolpe/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/Users/joaquinvolpe/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/Users/joaquinvolpe/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/Users/joaquinvolpe/perl5"; export PERL_MM_OPT;



#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/joaquinvolpe/mambaforge/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/joaquinvolpe/mambaforge/etc/profile.d/conda.sh" ]; then
        . "/Users/joaquinvolpe/mambaforge/etc/profile.d/conda.sh"
    else
        export PATH="/Users/joaquinvolpe/mambaforge/bin:$PATH"
    fi
fi
unset __conda_setup

if [ -f "/Users/joaquinvolpe/mambaforge/etc/profile.d/mamba.sh" ]; then
    . "/Users/joaquinvolpe/mambaforge/etc/profile.d/mamba.sh"
fi
# <<< conda initialize <<<

